---
version: 2

jobs:
  build:
    docker:
      - image: udata/circleci
      - image: mongo:3.2
      - image: redis
      - image: udata/elasticsearch:2.4.5
      - image: postgres:11-alpine
        name: db
        environment:
          POSTGRES_DB: ckan
          POSTGRES_USER: ckan
          POSTGRES_PASSWORD: ckan
          DS_RO_PASS: datastore
      - image: ckan/solr:latest
        name: solr
      - image: udata/ckan-test
        environment:
          CKAN_SQLALCHEMY_URL: postgresql://ckan:ckan@db/ckan
          CKAN_DATASTORE_WRITE_URL: postgresql://ckan:ckan@db/datastore
          CKAN_DATASTORE_READ_URL: postgresql://datastore_ro:datastore@db/datastore
          CKAN_SOLR_URL: http://solr:8983/solr/ckan
          CKAN_REDIS_URL: redis://localhost:6379/1
          CKAN_DATAPUSHER_URL: http://datapusher:8800
          CKAN_SITE_URL: http://localhost:5000
          CKAN_MAX_UPLOAD_SIZE_MB: 50
          CKAN_WAIT_FOR: tcp://db:5432
          POSTGRES_PASSWORD: ckan
          DS_RO_PASS: datastore
    environment:
       BASH_ENV: /root/.bashrc
    steps:
      - checkout
      - run:
          name: Compute Python dependencies key
          command: cat requirements/*.pip > python.deps
      - run:
          name: Get the base reference branch
          command: export BASE_BRANCH=$(base_branch)
      - restore_cache:
          keys:
          - py-cache-v6-{{ arch }}-{{ checksum "python.deps" }}
          - py-cache-v6-{{ arch }}-{{ .Branch }}
          - py-cache-v6-{{ arch }}-{{ .Environment.BASE_BRANCH }}
      - run:
          name: Install python dependencies
          command: |
            virtualenv venv
            source venv/bin/activate
            pip install -e . || pip install -e .
            pip install -r requirements/develop.pip || pip install -r requirements/develop.pip
      - save_cache:
          key: py-cache-v6-{{ arch }}-{{ checksum "python.deps" }}
          paths:
          - venv
      - save_cache:
          key: py-cache-v6-{{ arch }}-{{ .Branch }}
          paths:
          - venv
      - run:
          name: Run tests
          command: |
            source venv/bin/activate
            inv qa test --report
      - store_test_results:
          path: reports/
      - store_artifacts:
          path: reports/
          destination: reports
      - run:
          name: Build a distributable package
          command: |
            source venv/bin/activate
            # Build a wheel release
            if [[ $CIRCLE_TAG ]]; then
                # This is a tagged release
                inv dist
            elif [[ "$CIRCLE_BRANCH" == feature/* ]]; then
                # This is a feature branch
                inv dist -b $CIRCLE_BUILD_NUM+${CIRCLE_BRANCH#*/}
            else
                # This is a simple development build
                inv dist -b $CIRCLE_BUILD_NUM
            fi
      - store_artifacts:
          path: dist
      - persist_to_workspace:
          root: .
          paths:
            - dist
            - venv

  publish:
    docker:
      - image: udata/circleci
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Install Twine
          command: pip install twine
      - deploy:
          name: Publish on PyPI
          command: twine upload --username "${PYPI_USERNAME}" --password "${PYPI_PASSWORD}" dist/*.whl

  github:
    docker:
      - image: udata/circleci
    environment:
       BASH_ENV: /root/.bashrc
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Upload github release
          command: gh_release

workflows:
  version: 2
  build:
    jobs:
      - build:
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
      - publish:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
          context: org-global
      - github:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
          context: org-global
